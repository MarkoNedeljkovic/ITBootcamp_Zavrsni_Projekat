<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="5" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="67387" started-at="2020-04-04T13:36:39 CEST" finished-at="2020-04-04T13:37:47 CEST">
    <groups>
    </groups>
    <test name="Default test" duration-ms="67387" started-at="2020-04-04T13:36:39 CEST" finished-at="2020-04-04T13:37:47 CEST">
      <class name="test.StoreTest">
        <test-method status="PASS" signature="start()[pri:0, instance:test.StoreTest@bd8db5a]" name="start" is-config="true" duration-ms="2871" started-at="2020-04-04T13:36:39 CEST" finished-at="2020-04-04T13:36:42 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- start -->
        <test-method status="PASS" signature="summerDressTest()[pri:1, instance:test.StoreTest@bd8db5a]" name="summerDressTest" duration-ms="9371" started-at="2020-04-04T13:36:42 CEST" finished-at="2020-04-04T13:36:52 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- summerDressTest -->
        <test-method status="PASS" signature="blueDressTest()[pri:2, instance:test.StoreTest@bd8db5a]" name="blueDressTest" duration-ms="3810" started-at="2020-04-04T13:36:52 CEST" finished-at="2020-04-04T13:36:56 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- blueDressTest -->
        <test-method status="PASS" signature="registrationTestSingle()[pri:3, instance:test.StoreTest@bd8db5a]" name="registrationTestSingle" duration-ms="8644" started-at="2020-04-04T13:36:56 CEST" finished-at="2020-04-04T13:37:04 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registrationTestSingle -->
        <test-method status="PASS" signature="registrationTestGroup30()[pri:4, instance:test.StoreTest@bd8db5a]" name="registrationTestGroup30" duration-ms="35844" started-at="2020-04-04T13:37:04 CEST" finished-at="2020-04-04T13:37:40 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registrationTestGroup30 -->
        <test-method status="FAIL" signature="logInTestSingle()[pri:5, instance:test.StoreTest@bd8db5a]" name="logInTestSingle" duration-ms="1516" started-at="2020-04-04T13:37:40 CEST" finished-at="2020-04-04T13:37:42 CEST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [Work] but found [WORK],
expected [text(),'Tennessee] but found [Tennessee],
expected [Office] but found [OFFICE],
expected [contains(text(),'Minnesota] but found [Minnesota],
expected [Work] but found [WORK],
expected [//option[contains(text(),'Maine] but found [Maine],
expected [Home] but found [HOME],
expected [Maine//option[contains(text(),'Alabama] but found [Alabama],
expected [Office] but found [OFFICE],
expected [t(),'Alabama//option[contains(text(),'Texas] but found [Texas]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [Work] but found [WORK],
expected [text(),'Tennessee] but found [Tennessee],
expected [Office] but found [OFFICE],
expected [contains(text(),'Minnesota] but found [Minnesota],
expected [Work] but found [WORK],
expected [//option[contains(text(),'Maine] but found [Maine],
expected [Home] but found [HOME],
expected [Maine//option[contains(text(),'Alabama] but found [Alabama],
expected [Office] but found [OFFICE],
expected [t(),'Alabama//option[contains(text(),'Texas] but found [Texas]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at test.StoreTest.logInTestSingle(StoreTest.java:116)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:821)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:767)
at org.testng.TestRunner.run(TestRunner.java:588)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1214)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1136)
at org.testng.TestNG.runSuites(TestNG.java:1066)
at org.testng.TestNG.run(TestNG.java:1034)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logInTestSingle -->
        <test-method status="PASS" signature="end()[pri:0, instance:test.StoreTest@bd8db5a]" name="end" is-config="true" duration-ms="5292" started-at="2020-04-04T13:37:42 CEST" finished-at="2020-04-04T13:37:47 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- end -->
      </class> <!-- test.StoreTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
